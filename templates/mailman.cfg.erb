# Managed by Puppet, do not edit!
#
# Copyright (C) 2008-2017 by the Free Software Foundation, Inc.
#
# This file is part of GNU Mailman.
#
# GNU Mailman is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# GNU Mailman is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along with
# GNU Mailman.  If not, see <http://www.gnu.org/licenses/>.

# This file contains the Debian configuration for mailman.  It uses ini-style
# formats under the lazr.config regime to define all system configuration
# options.  See <https://launchpad.net/lazr.config> for details.


[mailman]
# This address is the "site owner" address.  Certain messages which must be
# delivered to a human, but which can't be delivered to a list owner (e.g. a
# bounce from a list owner), will be sent to this address.  It should point to
# a human.
site_owner: <%= @site_owner %>

# This is the local-part of an email address used in the From field whenever a
# message comes from some entity to which there is no natural reply recipient.
# Mailman will append '@' and the host name of the list involved.  This
# address must not bounce and it must not point to a Mailman process.
noreply_address: <%= @noreply_address %>

# The default language for this server.
default_language: <%= @default_language %>

# Membership tests for posting purposes are usually performed by looking at a
# set of headers, passing the test if any of their values match a member of
# the list.  Headers are checked in the order given in this variable.  The
# value From_ means to use the envelope sender.  Field names are case
# insensitive.  This is a space separate list of headers.
sender_headers:<% @sender_headers.each do |value| -%>
 <%= value -%>
<% end -%>


# Mail command processor will ignore mail command lines after designated max.
email_commands_max_lines: <%= @email_commands_max_lines %>

# Default length of time a pending request is live before it is evicted from
# the pending database.
pending_request_life: <%= @pending_request_life %>

# How long should files be saved before they are evicted from the cache?
cache_life: <%= @cache_life %>

# A callable to run with no arguments early in the initialization process.
# This runs before database initialization.
pre_hook: <%= @pre_hook %>

# A callable to run with no arguments late in the initialization process.
# This runs after adapters are initialized.
post_hook: <%= @post_hook %>

# Which paths.* file system layout to use.
# You should not change this variable.
layout: <%= @layout %>

# Can MIME filtered messages be preserved by list owners?
filtered_messages_are_preservable: <%= @filtered_messages_are_preservable %>

# How should text/html parts be converted to text/plain when the mailing list
# is set to convert HTML to plaintext?  This names a command to be called,
# where the substitution variable $filename is filled in by Mailman, and
# contains the path to the temporary file that the command should read from.
# The command should print the converted text to stdout.
html_to_plain_text_command: <%= @html_to_plain_text_command %>

# Specify what characters are allowed in list names.  Characters outside of
# the class [-_.+=!$*{}~0-9a-z] matched case insensitively are never allowed,
# but this specifies a subset as the only allowable characters.  This must be
# a valid character class regexp or the effect on list creation is
# unpredictable.
listname_chars: <%= @listname_chars %>


[shell]
# `mailman shell` (also `withlist`) gives you an interactive prompt that you
# can use to interact with an initialized and configured Mailman system.  Use
# --help for more information.  This section allows you to configure certain
# aspects of this interactive shell.

# Customize the interpreter prompt.
prompt: <%= @prompt %>

# Banner to show on startup.
banner: <%= @banner %>

# Use IPython as the shell, which must be found on the system.  Valid values
# are `no`, `yes`, and `debug` where the latter is equivalent to `yes` except
# that any import errors will be displayed to stderr.
use_ipython: <%= @use_ipython %>

# Set this to allow for command line history if readline is available.  This
# can be as simple as $var_dir/history.py to put the file in the var directory.
history_file: <%= @history_file %>


[paths.<%= @layout -%>]
# Important directories for Mailman operation.  These are defined here so that
# different layouts can be supported.   For example, a developer layout would
# be different from a FHS layout.  Most paths are based off the var_dir, and
# often just setting that will do the right thing for all the other paths.
# You might also have to set spool_dir though.
#
# Substitutions are allowed, but must be of the form $var where 'var' names a
# configuration variable in the paths.* section.  Substitutions are expanded
# recursively until no more $-variables are present.  Beware of infinite
# expansion loops!
#
<% @dirs.each_pair do |key, value| -%>
<%= key %>: <%= value %>
<% end -%>

# There are also a number of paths to specific file locations that can be
# defined.  For these, the directory containing the file must already exist,
# or be one of the directories created by Mailman as per above.
#
# This is where PID file for the master runner is stored.
pid_file: <%= @pid_file %>
# Lock file.
lock_file: <%= @lock_file %>


[database]
# The class implementing the IDatabase.
<% if @database == "SQLite" -%>
class: mailman.database.sqlite.SQLiteDatabase
<% elsif @database == "MySQL" -%>
class: mailman.database.mysql.MySQLDatabase
<% elsif @database == "PostgreSQL" -%>
class: mailman.database.postgresql.PostgreSQLDatabase
<% end -%>

# Use this to set the Storm database engine URL.  You generally have one
# primary database connection for all of Mailman.  List data and most rosters
# will store their data in this database, although external rosters may access
# other databases in their own way.  This string supports standard
# 'configuration' substitutions.
<% if @database == "SQLite" -%>
url: sqlite:///<%= @database_params['path'] %>
<% elsif @database == "MySQL" -%>
#url: mysql+pymysql://<%= @database_params['user'] %>:<%= @database_params['password'] %>@<%= @database_params['hostname'] %>/<%= @database_params['dbname'] %>?charset=utf8&use_unicode=1
<% elsif @database == "PostgreSQL" -%>
url: postgresql://<%= @database_params['user'] %>:<%= @database_params['password'] %>@<%= @database_params['hostname'] %>/<%= @database_params['dbname'] %>
<% end -%>

debug: <%= @debug %>


[logging.<%= @layout -%>]
# This defines various log settings.  The options available are:
#
# - level     -- Overrides the default level; this may be any of the
#                standard Python logging levels, case insensitive.
# - format    -- Overrides the default format string
# - datefmt   -- Overrides the default date format string
# - path      -- Overrides the default logger path.  This may be a relative
#                path name, in which case it is relative to Mailman's LOG_DIR,
#                or it may be an absolute path name.  You cannot change the
#                handler class that will be used.
# - propagate -- Boolean specifying whether to propagate log message from this
#                logger to the root "mailman" logger.  You cannot override
#                settings for the root logger.
#
# In this section, you can define defaults for all loggers, which will be
# prefixed by 'mailman.'.  Use subsections to override settings for specific
# loggers.  The names of the available loggers are:
#
# - archiver        --  All archiver output
# - bounce          --  All bounce processing logs go here
# - config          --  Configuration issues
# - database        --  Database logging (SQLAlchemy and Alembic)
# - debug           --  Only used for development
# - error           --  All exceptions go to this log
# - fromusenet      --  Information related to the Usenet to Mailman gateway
# - http            --  Internal wsgi-based web interface
# - locks           --  Lock state changes
# - mischief        --  Various types of hostile activity
# - runner          --  Runner process start/stops
# - smtp            --  Successful SMTP activity
# - smtp-failure    --  Unsuccessful SMTP activity
# - subscribe       --  Information about leaves/joins
# - vette           --  Message vetting information
format: <%= @format %>
datefmt: <%= @datefmt %>
propagate: <%= @propagate %>
level: <%= @level %>
path: <%= @path %>

[webservice]
# The hostname at which admin web service resources are exposed.
hostname: <%= @hostname %>

# The port at which the admin web service resources are exposed.
port: <%= @port %>

# Whether or not requests to the web service are secured through SSL.
use_https: <%= @use_https %>

# Whether or not to show tracebacks in an HTTP response for a request that
# raised an exception.
show_tracebacks: <%= @show_tracebacks %>

# The API version number for the current (highest) API.
api_version: <%= @api_version %>

# The administrative username.
admin_user: <%= @admin_user %>

# The administrative password.
admin_pass: <%= @admin_pass %>

[mta]
# The class defining the interface to the incoming mail transport agent.
<% if @mta == "Exim4" -%>
incoming: mailman.mta.exim4.LMTP
<% elsif @mta == "Postfix" -%>
incoming: mailman.mta.postfix.LMTP
<% elsif @mta == "Sendmail" -%>
incoming: mailman.mta.sendmail.LMTP
<% end -%>

# The callable implementing delivery to the outgoing mail transport agent.
# This must accept three arguments, the mailing list, the message, and the
# message metadata dictionary.
outgoing: <%= @outgoing %>

# How to connect to the outgoing MTA.  If smtp_user and smtp_pass is given,
# then Mailman will attempt to log into the MTA when making a new connection.
smtp_host: <%= @smtp_hostname %>
smtp_port: <%= @smtp_port %>
smtp_user: <%= @smtp_user %>
smtp_pass: <%= @smtp_pass %>

# Where the LMTP server listens for connections.  Use 127.0.0.1 instead of
# localhost for Postfix integration, because Postfix only consults DNS
# (e.g. not /etc/hosts).
lmtp_host: <%= @lmtp_hostname %>
lmtp_port: <%= @lmtp_port %>

# Where can we find the mail server specific configuration file?  The path can
# be either a file system path or a Python import path.  If the value starts
# with python: then it is a Python import path, otherwise it is a file system
# path.  File system paths must be absolute since no guarantees are made about
# the current working directory.  Python paths should not include the trailing
# .cfg, which the file must end with.
<% if @mta == "Exim4" -%>
configuration: python:mailman.config.exim4
<% elsif @mta == "Postfix" -%>
configuration: python:mailman.config.postfix
<% elsif @mta == "Sendmail" -%>
configuration: python:mailman.config.sendmail
<% end -%>
